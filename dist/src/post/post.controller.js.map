{"version":3,"file":"post.controller.js","sourceRoot":"/","sources":["src/post/post.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,2CAAyE;AACzE,6CAIwB;AACxB,2DAAuD;AAGhD,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAGnD,AAAN,KAAK,CAAC,aAAa,CACT,uBAAgD;QAExD,IAAI;YACF,MAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;YAE9D,IAAI,QAAQ,GAA6B;gBACvC,SAAS,EAAE,IAAI;gBACf,YAAY,EAAE,IAAI;aACnB,CAAC;YAEF,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IAGK,AAAN,KAAK,CAAC,kBAAkB,CACL,MAAc;QAE/B,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;SAC1D;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;SACb;IACH,CAAC;CACF,CAAA;AAjCY,wCAAc;AAInB;IADL,IAAA,aAAI,EAAC,iBAAiB,CAAC;;IAErB,WAAA,IAAA,aAAI,GAAE,CAAA;;qCAA0B,kCAAuB;;mDAezD;AAGK;IADL,IAAA,YAAG,EAAC,wBAAwB,CAAC;;IAE3B,WAAA,IAAA,cAAK,EAAC,QAAQ,CAAC,CAAA;;;;wDAQjB;yBAhCU,cAAc;IAD1B,IAAA,mBAAU,EAAC,MAAM,CAAC;qCAEyB,0BAAW;GAD1C,cAAc,CAiC1B","sourcesContent":["import { Controller, Post, Body, Query, Res, Get } from \"@nestjs/common\";\nimport {\n  CreateNewPostRequestDTO,\n  CreateNewPostResponseDTO,\n  FetchPostsByUserIdResponseDTO,\n} from \"./dto/post.dto\";\nimport { PostService } from \"./providers/post.service\";\n\n@Controller(\"post\")\nexport class PostController {\n  constructor(private readonly postService: PostService) {}\n\n  @Post(\"create-new-post\")\n  async createNewPost(\n    @Body() createNewPostRequestDTO: CreateNewPostRequestDTO\n  ): Promise<CreateNewPostResponseDTO> {\n    try {\n      await this.postService.createNewPost(createNewPostRequestDTO);\n\n      let response: CreateNewPostResponseDTO = {\n        isSuccess: true,\n        errorMessage: null,\n      };\n\n      return response;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  @Get(\"fetch-posts-by-user-id\")\n  async fetchPostsByUserId(\n    @Query(\"userId\") userId: number\n  ): Promise<FetchPostsByUserIdResponseDTO> {\n    try {\n      return await this.postService.fetchPostsByUserId(userId);\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n}\n"]}