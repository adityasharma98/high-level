{"version":3,"file":"user.controller.js","sourceRoot":"/","sources":["src/user/user.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,2CASwB;AACxB,6CAKwB;AACxB,2DAAuD;AAGhD,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAGnD,AAAN,KAAK,CAAC,aAAa,CACT,uBAAgD;QAExD,IAAI;YACF,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAC/C,uBAAuB,CACxB,CAAC;YAEF,IAAI,QAAQ,GAA6B;gBACvC,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,IAAI;gBACf,YAAY,EAAE,IAAI;aACnB,CAAC;YAEF,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IAGK,AAAN,KAAK,CAAC,UAAU,CACN,oBAA0C;QAElD,IAAI;YACF,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YAEtE,OAAO,OAAO,CAAC;SAChB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IAGK,AAAN,KAAK,CAAC,sBAAsB,CACT,MAAc;QAE/B,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;SAC9D;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;SACb;IACH,CAAC;CACF,CAAA;AAlDY,wCAAc;AAInB;IADL,IAAA,aAAI,EAAC,iBAAiB,CAAC;;IAErB,WAAA,IAAA,aAAI,GAAE,CAAA;;qCAA0B,kCAAuB;;mDAkBzD;AAGK;IADL,IAAA,aAAI,EAAC,aAAa,CAAC;;IAEjB,WAAA,IAAA,aAAI,GAAE,CAAA;;qCAAuB,+BAAoB;;gDAUnD;AAGK;IADL,IAAA,YAAG,EAAC,2BAA2B,CAAC;;IAE9B,WAAA,IAAA,cAAK,EAAC,QAAQ,CAAC,CAAA;;;;4DAQjB;yBAjDU,cAAc;IAD1B,IAAA,mBAAU,EAAC,MAAM,CAAC;qCAEyB,0BAAW;GAD1C,cAAc,CAkD1B","sourcesContent":["import {\n  Controller,\n  Post,\n  Body,\n  Query,\n  Res,\n  Get,\n  HttpException,\n  HttpStatus,\n} from \"@nestjs/common\";\nimport {\n  CreateNewUserRequestDTO,\n  CreateNewUserResponseDTO,\n  FetchFollowersByUserIdResponseDTO,\n  FollowUserRequestDTO,\n} from \"./dto/user.dto\";\nimport { UserService } from \"./providers/user.service\";\n\n@Controller(\"user\")\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post(\"create-new-user\")\n  async createNewUser(\n    @Body() createNewUserRequestDTO: CreateNewUserRequestDTO\n  ): Promise<CreateNewUserResponseDTO> {\n    try {\n      let userId = await this.userService.createNewUser(\n        createNewUserRequestDTO\n      );\n\n      let response: CreateNewUserResponseDTO = {\n        userId: userId,\n        isSuccess: true,\n        errorMessage: null,\n      };\n\n      return response;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  @Post(\"follow-user\")\n  async followUser(\n    @Body() followUserRequestDTO: FollowUserRequestDTO\n  ): Promise<boolean> {\n    try {\n      let success = await this.userService.followUser(followUserRequestDTO);\n\n      return success;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n\n  @Get(\"fetch-followes-by-user-id\")\n  async fetchFollowersByUserId(\n    @Query(\"userId\") userId: number\n  ): Promise<FetchFollowersByUserIdResponseDTO> {\n    try {\n      return await this.userService.fetchFollowersByUserId(userId);\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n}\n"]}